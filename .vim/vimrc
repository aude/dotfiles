if isdirectory(expand('~/.vim/bundle/vim-pathogen'))
	set rtp+=~/.vim/bundle/vim-pathogen
	execute pathogen#infect()
endif

set nocompatible
syntax on
filetype plugin indent on

"set number
"set relativenumber
set undofile
set hlsearch
set incsearch
set ignorecase
set smartcase

set showcmd
set wildmenu
set ruler

set splitbelow
set splitright

set clipboard=unnamedplus

" set better cache dirs
set directory=~/.vim/swap
set backupdir=~/.vim/backup
set viewdir=~/.vim/view
set undodir=~/.vim/undo
set viminfo+=n~/.vim/viminfo

" " if in graphical environment, use light theme. else, use dark
" if $DISPLAY != ""
" 	set background=light
" else
" 	set background=dark
" endif
set background=dark

"let g:solarized_termcolors=256 " use if not using Solarized in terminal emulator
"let g:solarized_termtrans=1
" ignore errors, gracefully fall back
silent! colorscheme solarized

" map
let mapleader=","
map j gj
map k gk
map <C-J> <C-W><C-J>
map <C-K> <C-W><C-K>
map <C-L> <C-W><C-L>
map <C-H> <C-W><C-H>

" force markdown ~https://github.com/tpope/vim-markdown
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
" force go
autocmd BufNewFile,BufReadPost *.go set filetype=go
" force ArnoldC
autocmd BufNewFile,BufReadPost *.arnoldc set filetype=arnoldc
" Django syntax highlighting
autocmd BufNewFile,BufReadPost */dev/py/*/templates/*.html set filetype=htmldjango
" force nginx.conf
autocmd BufNewFile,BufReadPost */etc/nginx/* set filetype=nginx.conf

" vim -b : edit binary using xxd-format!
augroup Binary
	autocmd!
	autocmd BufReadPre  *.bin let &bin=1
	autocmd BufReadPost *.bin if &bin | %!xxd
	autocmd BufReadPost *.bin set ft=xxd | endif
	autocmd BufWritePre *.bin if &bin | %!xxd -r
	autocmd BufWritePre *.bin endif
	autocmd BufWritePost *.bin if &bin | %!xxd
	autocmd BufWritePost *.bin set nomod | endif
augroup END

" commentary.vim
autocmd BufNewFile,BufReadPost *.phtml setlocal commentstring=<?php\ /*%s*/\ ?>

" easytags.vim
let g:easytags_file = '~/.vim/tags'

" Syntastic
" syntax check on file open
let g:syntastic_check_on_open = 1
" don't syntax check right before vim quits
let g:syntastic_check_on_wq = 0
" don't use phpcs opportunistically
let g:syntastic_php_checkers = ['php', 'phpstan']
" `shellcheck -x`
let g:syntastic_sh_shellcheck_args = '-x'

" matchit.vim
source $VIMRUNTIME/macros/matchit.vim

" Vdebug
if !exists('g:vdebug_options')
	let g:vdebug_options = {}
endif
" let g:vdebug_options.path_maps = {'/remote/path': '/local/path'}
