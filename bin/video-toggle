#!/bin/sh

state=$(xrandr)
connected=$(echo "$state" | awk '$2 == "connected" {print $1}')
actives=$(echo "$state" | awk '$2 == "connected" && ($3 ~ /^[1-9]/ || $4 ~ /^[1-9]/) {print $1}')

# let's choose the first active output as the active output
active=$(printf '%s' "$actives" | head -n1)

# if any display is active
if [ -n "$active" ]; then
    # choose the connected output after the active output
    # use twice the input in case the active output is the last output
    switch_to=$(printf '%s\n%s' "$connected" "$connected" | awk "\$0 == \"$active\" {getline; print; exit}")
# if no display is active
else
    # choose the first connected output
    switch_to=$(printf '%s' "$connected" | head -n1)
fi

case "$switch_to" in
	eDP*)
		video-control "$switch_to" use
		audio-control analog use
		;;
	HDMI*)
		video-control "$switch_to" use
		audio-control hdmi use
		;;
	DP*)
		video-control "$switch_to" use
		audio-control analog use
		;;
	*)
		video-control "$switch_to" use
		audio-control analog use
		;;
esac
